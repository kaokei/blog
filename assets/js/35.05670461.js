(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{512:function(t,s,a){"use strict";a.r(s);var e=a(20),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"json-schema-入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json-schema-入门"}},[t._v("#")]),t._v(" json schema 入门")]),t._v(" "),a("h2",{attrs:{id:"一句话介绍-json-schema-的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一句话介绍-json-schema-的作用"}},[t._v("#")]),t._v(" 一句话介绍 json schema 的作用")]),t._v(" "),a("p",[t._v("校验输入的 json 是否符合预期的格式。")]),t._v(" "),a("p",[t._v("可以考虑存在这样的一个函数 validate(inputJson, inputJsonSchema) => boolean;")]),t._v(" "),a("p",[t._v("需要注意 json 的定义。json 包含以下这些类型。"),a("code",[t._v("object array string integer number boolean null")]),t._v("。")]),t._v(" "),a("p",[t._v("关键是要意识到基本类型也属于 json 的定义。")]),t._v(" "),a("p",[t._v("另一方面，json schema 的则一定是 object。当然 json schema 也是一个 json。")]),t._v(" "),a("p",[t._v("比如描述字符串的 json schema 则是"),a("code",[t._v('{"type": "string"}')]),t._v("。\n可以看出来描述基本类型的 json 已经需要一个 object 类型的 json schema 类描述了。")]),t._v(" "),a("p",[t._v("json schema 同时也是一个 json 文件。这既是它的优势，也是它的劣势。因为 json 非常容易序列化，所以在跨语言方面表现的非常好。\n但是 json 本身的逻辑表达能力非常欠缺，不能表达非常复杂的逻辑关系。")]),t._v(" "),a("p",[t._v("json schema 主要用于验证 json 的类型结构。")]),t._v(" "),a("h2",{attrs:{id:"一篇文章入门-json-schema"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一篇文章入门-json-schema"}},[t._v("#")]),t._v(" 一篇文章入门 json schema")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://json-schema.org/learn/getting-started-step-by-step.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("原始入门文章"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可选字段，指定schema版本")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"$schema"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://json-schema.org/draft/2020-12/schema"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可选字段，指定当前schema文件的uri")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"$id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://example.com/product.schema.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可选字段，指定当前schema文件的短描述")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"title"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Product"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可选字段，指定当前schema文件的长描述")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A product in the catalog"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 必填字段，指定输入json的类型")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为当前json是一个object，所以需要指定有哪些属性")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"properties"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明字段名productId")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"productId"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 描述字段含义")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The unique identifier for a product"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 描述字段类型")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"integer"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明字段名productName")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"productName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Name of the product"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明字段名price")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"price"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The price of the product"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 价格必须大于0")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"exclusiveMinimum"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明字段名tags，是一个数组")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tags"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Tags for the product"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"array"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// tags数组中的元素都是字符串")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"items"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// tags数组最少有一个tag")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"minItems"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// tags数组中元素必须唯一")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"uniqueItems"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明字段名dimensions，是一个对象")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里演示了嵌套对象的json schema")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dimensions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"properties"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"length"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"width"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"height"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"required"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"length"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"width"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"height"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明字段名dimensions，是一个对象")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里演示了使用$ref来引用一个外部json schema")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"warehouseLocation"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Coordinates of the warehouse where the product is located."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"$ref"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://example.com/geographical-location.schema.json"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定哪些属性是必填字段")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"required"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"productId"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"productName"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"price"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("以下是另一个 json schema 文件，被上面的 json schema 文件通过"),a("code",[t._v("$ref")]),t._v("指向"),a("code",[t._v("$id")]),t._v("引用")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"$id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://example.com/geographical-location.schema.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"$schema"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://json-schema.org/draft/2020-12/schema"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"title"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Longitude and Latitude"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A geographical coordinate on a planet (most commonly Earth)."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"required"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"latitude"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"longitude"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"properties"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"latitude"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"minimum"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("-90")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"maximum"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"longitude"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"minimum"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("-180")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"maximum"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("180")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"深入理解-json-schema"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深入理解-json-schema"}},[t._v("#")]),t._v(" 深入理解 json schema")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://json-schema.org/understanding-json-schema/",target:"_blank",rel:"noopener noreferrer"}},[t._v("原始官方文章"),a("OutboundLink")],1)]),t._v(" "),a("h4",{attrs:{id:"顶层关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顶层关键字"}},[t._v("#")]),t._v(" 顶层关键字")]),t._v(" "),a("p",[a("code",[t._v("$schema")]),t._v(" "),a("code",[t._v("$id")]),t._v(" title description type required properties")]),t._v(" "),a("p",[a("code",[t._v("$schema")]),t._v("只能在顶层使用。而且一旦使用就不能被外部引用，这里有点疑问，因为上面的例子展示了外部引用???")]),t._v(" "),a("h4",{attrs:{id:"string-类型的关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-类型的关键字"}},[t._v("#")]),t._v(" string 类型的关键字")]),t._v(" "),a("p",[t._v("minLength maxLength pattern format")]),t._v(" "),a("h4",{attrs:{id:"number-类型的关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number-类型的关键字"}},[t._v("#")]),t._v(" number 类型的关键字")]),t._v(" "),a("p",[t._v("multipleOf minimum maximum exclusiveMinimum exclusiveMaximum")]),t._v(" "),a("h4",{attrs:{id:"object-类型的关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-类型的关键字"}},[t._v("#")]),t._v(" object 类型的关键字")]),t._v(" "),a("p",[t._v("除了使用 type 指定属性类型，还可以使用 enum 来指定枚举类型")]),t._v(" "),a("p",[t._v("除了使用 properties 来描述属性，还可以通过 patternProperties 来指定非特定的属性。")]),t._v(" "),a("p",[t._v("additionalProperties 控制是否可以有多余属性")]),t._v(" "),a("p",[t._v("unevaluatedProperties ???")]),t._v(" "),a("p",[t._v("if then")]),t._v(" "),a("p",[t._v("propertyNames")]),t._v(" "),a("p",[t._v("minProperties maxProperties")]),t._v(" "),a("h4",{attrs:{id:"array-类型的关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array-类型的关键字"}},[t._v("#")]),t._v(" array 类型的关键字")]),t._v(" "),a("p",[t._v("items prefixItems minItems maxItems uniqueItems contains minContains maxContains")]),t._v(" "),a("h4",{attrs:{id:"通用关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用关键字"}},[t._v("#")]),t._v(" 通用关键字")]),t._v(" "),a("p",[t._v("title description default examples deprecated readOnly writeOnly")]),t._v(" "),a("p",[a("code",[t._v("$comment")]),t._v(" 相当于代码注释，是给后续修改该 json schema 的人看的，而不是给使用 json schema 的工具使用的。")]),t._v(" "),a("p",[t._v("type enum const 指定属性类型的 "),a("code",[t._v("3")]),t._v(" 种方式。")]),t._v(" "),a("h4",{attrs:{id:"媒体类型关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#媒体类型关键字"}},[t._v("#")]),t._v(" 媒体类型关键字")]),t._v(" "),a("p",[t._v("相当于是 string 类型的子类型，更加详细的描述了 string 类型。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"contentMediaType"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/html"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"contentEncoding"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"base64"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"contentMediaType"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"image/png"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"schema-组合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#schema-组合"}},[t._v("#")]),t._v(" schema 组合")]),t._v(" "),a("p",[t._v("allOf anyOf oneOf not")]),t._v(" "),a("p",[t._v("注意到 oneOf 是严格限制只能是满足其中一个 subschema，anyOf 则可以是 1 个或者多个 subschema")]),t._v(" "),a("h4",{attrs:{id:"组合错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合错误"}},[t._v("#")]),t._v(" 组合错误")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不可能同时存在既是string又是number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"allOf"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"组合重构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合重构"}},[t._v("#")]),t._v(" 组合重构")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"oneOf"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"multipleOf"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"multipleOf"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上面的json schema可以重构成这样的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"oneOf"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"multipleOf"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"multipleOf"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"条件关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件关键字"}},[t._v("#")]),t._v(" 条件关键字")]),t._v(" "),a("p",[t._v("dependentRequired，默认是单向的，如果需要双向依赖，则需要手动维护依赖关系。含义是当输入的 json 数据包含某个字段 A，则必须包含对应的字段 B、C、D...")]),t._v(" "),a("p",[t._v("dependentSchemas 功能类似，只是语法不一样。")]),t._v(" "),a("p",[t._v("if-then-else，单纯的 if-then-else 只能判断一个条件，不能实现 else-if 的效果。可以配置 allOf 和多个 if-then 来达到这个效果。")]),t._v(" "),a("h2",{attrs:{id:"引用-schema"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用-schema"}},[t._v("#")]),t._v(" 引用 schema")]),t._v(" "),a("p",[t._v("首先需要注意区分"),a("code",[t._v("$schema")]),t._v("和"),a("code",[t._v("$id")]),t._v("的区别。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://json-schema.org/understanding-json-schema/reference/schema.html?highlight=schema#schema",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考这里"),a("OutboundLink")],1),t._v("介绍了"),a("code",[t._v("$schema")]),t._v("应该在顶层使用，类似于 html 中的 dtd 文件，是一种 meta-schema。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://json-schema.org/understanding-json-schema/structuring.html#schema-identification",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考这里"),a("OutboundLink")],1),t._v("介绍了"),a("code",[t._v("$id")]),t._v("不是必须的，如果不存在则代表是一个匿名 schema。虽然"),a("code",[t._v("$id")]),t._v("是一个 URI，但是不代表具体实现会通过这个 URI 来获取这个 schema，它只是一个 ID 而已。\n虽然只是一个 ID，但是在计算相对路径时，还是和 URL 的计算规则时相似的。")]),t._v(" "),a("h4",{attrs:{id:"retrieval-uri"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#retrieval-uri"}},[t._v("#")]),t._v(" Retrieval URI")]),t._v(" "),a("p",[t._v("代表具体实现获取 schema 的 URI。如果具体实现并不是通过网络获取，而是直接访问的匿名 schema，那么就没有 Retrieval URI。")]),t._v(" "),a("h4",{attrs:{id:"base-uri"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#base-uri"}},[t._v("#")]),t._v(" Base URI")]),t._v(" "),a("p",[t._v("Base URI 是参考的"),a("a",{attrs:{href:"https://datatracker.ietf.org/doc/html/rfc3986#section-5.4.1",target:"_blank",rel:"noopener noreferrer"}},[t._v("rfc3986"),a("OutboundLink")],1),t._v("的概念。")]),t._v(" "),a("p",[t._v("一般就是 Retrieval URI 或者 根据 $id 来计算生成。")]),t._v(" "),a("p",[t._v("Base URI 是非常重要的概念，因为后续在计算外部 schema 的路径时，就是根据 Base URI 来计算的。")]),t._v(" "),a("h4",{attrs:{id:"id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id"}},[t._v("#")]),t._v(" $id")]),t._v(" "),a("p",[t._v("如果$id是一个绝对URI，那么Base URI就是$id。如果$id 是一个相对路径，那么需要根据 Retrieval URI 来生成一个 Base URI。")]),t._v(" "),a("h4",{attrs:{id:"subschema"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subschema"}},[t._v("#")]),t._v(" subschema")]),t._v(" "),a("p",[t._v("可以使用 JSON Pointer 来指向 subschema。")]),t._v(" "),a("p",[t._v("其实就是利用 URI 中的 fragment 来定位 json schema 中的片段。"),a("a",{attrs:{href:"https://json-schema.org/understanding-json-schema/structuring.html#json-pointer",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://example.com/schemas/address#/properties/street_address"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("另一种不常见的方式时使用"),a("code",[t._v("$anchor")]),t._v("关键字来定义一个命名 fragment。"),a("a",{attrs:{href:"https://json-schema.org/understanding-json-schema/structuring.html#anchor",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://example.com/schemas/address#street_address"),a("OutboundLink")],1)]),t._v(" "),a("h4",{attrs:{id:"defs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#defs"}},[t._v("#")]),t._v(" $defs")]),t._v(" "),a("p",[t._v("可以在当前 schema 内部定义可以复用的 subschema。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"$defs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"ref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ref"}},[t._v("#")]),t._v(" $ref")]),t._v(" "),a("p",[t._v("上面都是在说定义 schema 和 subschema，这里说一下怎么引用外部 schema。")]),t._v(" "),a("p",[a("code",[t._v("$ref")]),t._v("可以时绝对 URI，也可以时相对 URI，如果是相对 URI，那么就需要借助 Base URI 来计算出绝对 URI。")]),t._v(" "),a("p",[t._v("当然，如果缺少 Base URI，同时"),a("code",[t._v("$ref")]),t._v("同时又是一个相对 URI，那么就会导致计算失败。")]),t._v(" "),a("p",[a("code",[t._v("$ref")]),t._v("还可以引用"),a("code",[t._v("$defs")]),t._v("，比如"),a("code",[t._v('"$ref": "#/$defs/name"')])]),t._v(" "),a("p",[a("code",[t._v("$ref")]),t._v("还可以递归引用自身 schema，语法是"),a("code",[t._v('"$ref": "#"')]),t._v("，当然需要避免循环引用。")]),t._v(" "),a("h4",{attrs:{id:"打包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打包"}},[t._v("#")]),t._v(" 打包")]),t._v(" "),a("p",[t._v("开发 schema 的时候，将多个 schema 分开到多个文件是一个最佳实践。但是发布一个 schema，最佳实践最好是打包成一个文件。")]),t._v(" "),a("p",[t._v("主要还是利用的"),a("code",[t._v("$defs")]),t._v("来声明 embedded schema。然后利用"),a("code",[t._v("$ref")]),t._v("来指向 embedded schema 的"),a("code",[t._v("$id")]),t._v("。注意这里需要区分 embedded schema 和 subschema 的区别。")]),t._v(" "),a("h2",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://json-schema.org/learn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考这里"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"各种实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#各种实现"}},[t._v("#")]),t._v(" 各种实现")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://json-schema.org/implementations.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考这里"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),a("p",[t._v("type 可以是数组，表示满足任意一个类型定义即可")]),t._v(" "),a("p",[t._v("最简单的 json schema 是{}，可以接受任意合法 json")]),t._v(" "),a("p",[t._v("json schema 可以区分整数和数字，integer 和 number")]),t._v(" "),a("p",[t._v("如果输入属性在满足 json schema 的基础上还有多余的属性，默认是可以通过校验的。通过 additionalProperties 关键字来控制。")]),t._v(" "),a("p",[t._v("object 的属性默认不是必填的，需要在 required 数组中声明必填字段")]),t._v(" "),a("p",[t._v("json schema 中出现了非关键字，不会有任何影响，也不会自动参与 validate 的过程，这是显然的，因为 validate 函数是别人实现的。除非我们自己实现自己的 validate 函数。\b 那么就可以处理新增加的关键字。")])])}),[],!1,null,null,null);s.default=n.exports}}]);